{"version":3,"file":"qrcode-BGVhaqWH.js","sources":["../../../.svelte-kit/adapter-node/chunks/qrcode.js"],"sourcesContent":["import qrImage from \"qr-image\";\nimport fs from \"fs\";\nimport { c as createConnection, d as data, o as ora } from \"./login.js\";\nasync function generate_qrcode(user, filedata) {\n  try {\n    let db2 = await createConnection();\n    let qrcode_path;\n    let filepath = \"files/\";\n    const result = await db2.execute(\"INSERT INTO qrcodes(`id_user`, `title`, `data`, `ora`, `stato`) VALUES (?, ?, ?, ?, ?)\", [user.id, filedata.title, data(), ora(), filedata.stato]);\n    const insertedId = result[0].insertId;\n    qrcode_path = `qrcodes/qrcode_${insertedId}.png`;\n    filepath += `file_${insertedId}`;\n    const qrcode_text = \"https://qrcode.rizzolo.cloud/scannerizza/\" + insertedId;\n    const qr_png = qrImage.imageSync(qrcode_text, { type: \"png\" });\n    fs.writeFileSync(qrcode_path, qr_png);\n    fs.writeFileSync(filepath, JSON.stringify(filedata));\n    const qrcode_image = fs.readFileSync(qrcode_path);\n    const base64_qrcode = qrcode_image.toString(\"base64\");\n    await db2.end();\n    return base64_qrcode;\n  } catch (error) {\n    await db.end();\n    console.error(\"Error:\", error);\n    throw error;\n  }\n}\nasync function mine_qrcodes(id_user) {\n  let db2 = await createConnection();\n  const result = await db2.execute(\"SELECT * FROM qrcodes WHERE id_user=?\", [id_user]);\n  var qrcodes = result[0];\n  for (let i = 0; i < qrcodes.length; i++) {\n    var file = \"qrcodes/qrcode_\" + qrcodes[i].id + \".png\";\n    if (fs.existsSync(file)) {\n      qrcodes[i][\"qrcode\"] = fs.readFileSync(file).toString(\"base64\");\n      qrcodes[i][\"file\"] = JSON.parse(fs.readFileSync(\"files/file_\" + qrcodes[i].id));\n    } else {\n      qrcodes[i][\"qrcode\"] = \"\";\n    }\n  }\n  await db2.end();\n  return qrcodes;\n}\nasync function get_qr_by_id(id_qr) {\n  let db2 = await createConnection();\n  const result = await db2.execute(\"SELECT * FROM qrcodes WHERE id=?\", [id_qr]);\n  var qrcode = result[0][0];\n  var file = \"qrcodes/qrcode_\" + id_qr + \".png\";\n  qrcode[\"qrcode\"] = fs.readFileSync(file).toString(\"base64\");\n  qrcode[\"file\"] = JSON.parse(fs.readFileSync(\"files/file_\" + id_qr));\n  await db2.end();\n  return qrcode;\n}\nasync function delete_qrcode(id_qr) {\n  let db2 = await createConnection();\n  await db2.execute(\"DELETE FROM qrcodes WHERE id=?\", [id_qr]);\n  await db2.end();\n  return true;\n}\nasync function update_qrcode(id_qr, stato) {\n  let db2 = await createConnection();\n  await db2.execute(\"UPDATE qrcodes SET stato=? WHERE id=?\", [stato, id_qr]);\n  await db2.end();\n  return true;\n}\nexport {\n  get_qr_by_id as a,\n  delete_qrcode as d,\n  generate_qrcode as g,\n  mine_qrcodes as m,\n  update_qrcode as u\n};\n"],"names":[],"mappings":"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"}